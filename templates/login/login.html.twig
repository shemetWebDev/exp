{% extends 'base.html.twig' %}
{% set base = 'login' %}

{% block title %}Вход в аккаунт
{% endblock %}

{% block body %}
	<section class="{{ base }}">
		<span class="{{ base }}__stat-label">зарегистрированных пользователей</span>
		<div class="{{ base }}__bg">
			<div class="{{ base }}__stat" data-start="14578">
				<span class="{{ base }}__stat-number">0</span>

			</div>
		</div>

		<div class="{{ base }}__card" id="loginCard">

			<div class="{{ base }}__notice" role="note">
				<span class="{{ base }}__notice-text">Впервые здесь?</span>
				<a href="{{ path('app_register') }}" class="{{ base }}__notice-link" aria-label="Перейти к регистрации">
					Зарегистрироваться
				</a>
			</div>

			{% if error %}
				<div class="{{ base }}__error" role="alert">
					{{ error.messageKey|trans(error.messageData, 'security', 'ru') }}
				</div>
			{% endif %}

			<h1 class="{{ base }}__title">Войдите в аккаунт</h1>
			<p class="{{ base }}__hint">Введите email и пароль, чтобы продолжить.</p>

			<form method="post" class="{{ base }}__form" novalidate>
				<label for="email" class="{{ base }}__label">Email</label>
				<input type="email" value="{{ last_email }}" name="email" id="email" class="{{ base }}__input" placeholder="name@email.com" autocomplete="email" inputmode="email" required aria-required="true">

				<label for="password" class="{{ base }}__label">Пароль</label>
				<input type="password" name="password" id="password" class="{{ base }}__input" placeholder="Ваш пароль" autocomplete="current-password" required aria-required="true">

				<input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

				<button class="{{ base }}__submit" type="submit">Войти</button>

				<p class="{{ base }}__small">
					Забыли пароль? Напишите нам!
				</p>
				<a href="{{ path('app_forgot_password_request') }}">Восстановить пароль</a>
			</form>
		</div>
	</section>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>

		(function () {
const holder = document.querySelector('.login__stat');
if (! holder) 
return;



const numEl = holder.querySelector('.login__stat-number');

const target = parseInt(holder.dataset.start, 10);
let current = Number.isFinite(target) ? target : 0;

// 0 -> current
const dur = 1200;
let t0 = null;
function raf(ts) {
if (! t0) 
t0 = ts;



const p = Math.min(1, (ts - t0) / dur);
numEl.textContent = Math.floor(current * p).toLocaleString('ru-RU');
if (p < 1) 
requestAnimationFrame(raf);



}
requestAnimationFrame(raf);

// Рост +1..3 раз в 3 сек
setInterval(() => {
current += Math.floor(Math.random() * 3) + 1;
numEl.textContent = current.toLocaleString('ru-RU');
}, 3000);
})();
	</script>
{% endblock %}
